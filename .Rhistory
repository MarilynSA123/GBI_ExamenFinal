shiny::runApp('precios')
runApp('precios')
runApp('precios')
)
runApp('precios')
runApp('precios')
runApp('precios')
runApp('precios')
runApp('precios')
runApp('precios')
runApp('precios')
runApp('precios')
runApp('precios')
runApp('precios')
runApp('precios')
runApp('precios')
runApp('precios')
runApp('precios')
runApp('precios')
#Peso fresco
pfr=6300
installed.packages("forensic")
install.packages("forensic")
library(tidyverse)
?mean
?library
5%%3
(5<3)
(5>4)
(5<3)&(5>4)
(5<8)&(5>4)
a=3
nombres<-c("Carlos","Juan")
altura<-c(180,169)
carreras<-c("Biotecnologia","Ciencias del agua","Ecosistemas","Agroecologia")
pais_andes<-("Ecuador","Colombia","Peru","Argentina","Chile","Venezuela","Bolivia")
especies<-sample(especies,12,repalce=TRUE)
especies<-sample(especies,12,replace=TRUE)
especies<-c("V.odorata","V.x tahitensis","V.planifolia","V.pompona","V.abundiflora")
especies<-sample(especies,12,replace=TRUE)
especies<-c("V.odorata","V.x tahitensis","V.planifolia","V.pompona","V.abundiflora")
especies<-sample(especies,12,replace=TRUE)
vainillol=sample(0:100,12, replace=TRUE)
0.01:2
etanol=sample(0:10/100)
0:10/100
etanol=sample(0:10/100,12,replace=TRUE)
contaminacion=sample(c(TRUE,FALSE),12,replace=TRUE)
calidad<-c("excelente","bueno","regular","malo")
calidad<-sample(calidad,12,replace=TRUE)
calidad<-as.factor(c("excelente","bueno","regular","malo"))
calidad<-sample(calidad,12,replace=TRUE)
contaminacion=sample(c(TRUE,FALSE),12,replace=TRUE)
calidad<-as.factor(c("excelente","bueno","regular","malo"))
calidad<-sample(calidad,12,replace=TRUE)
calidad<-c("excelente","bueno","regular","malo")
calidad<-as.factor(sample(calidad,12,replace=TRUE))
calidad<-as.factor(sample(calidad,12,replace=TRUE))
calidad<-c("excelente","bueno","regular","malo")
calidad<-sample(calidad,12,replace=TRUE)
as.factor(calidad)
calidad<-as.factor(calidad)
calidad
calidad<-as.factor(c("excelente","bueno","regular","malo"))
calidad<-sample(calidad,12,replace=TRUE)
calidad
data.frame(especies,vainillol,etanol,contaminacion,calidad)
data=data.frame(especies,vainillol,etanol,contaminacion,calidad)
DNase
subset(DNase,conc>0.1&conc<0.2)
DNase
subset(DNase,conc>0.1&conc<0.2)
subset(DNase,Run!=2)
subset(DNase,Run!=2&conc>0.2)
subset(DNase,Run!=2&conc>0.2&density<=1)
knitr::opts_chunk$set(echo = TRUE)
ciudad<-"Ecuador"
ciudad<-"Ecuador"
21/1000*453
setwd("D:/R/BioInformatica/GBI_ExamenFinal")
setwd("D:/R/BioInformatica/GBI_ExamenFinal")
setwd("D:/R/BioInformatica/GBI6_ExamenFinal")
df <- read.csv("data/mRNA_expr.csv")
df <- read.csv("data/mRNA_expr.csv")
library(tidyverse)
df <- read.csv("data/mRNA_expr.csv")
head(df,2)
View(df)
View(df)
pivot_longer(df[,3:9],names_to = "dataset")
pivot_longer(cols=df[,3:9],names_to = "dataset")
pivot_longer(df,cols=df[,3:9],names_to = "dataset")
pivot_longer(df,cols=as.numeric(df[,3:9]),names_to = "dataset")
pivot_longer(df,cols=df[,3:9],names_to = "dataset")
colnames(df)
i=3:9
df%>%pivot_longer(!c(bcr_patient_barcode,dataset),names_to = "expresion_level")
df%>%pivot_longer(!c(bcr_patient_barcode,dataset),names_to = "gen",values_to = "expresion_level")
df%>%
pivot_longer(!c(bcr_patient_barcode,dataset),names_to = "gen",values_to = "expresion_level")%>%
select(dataset,gen,expresion_level)
library(sjPlot)
library("sjPlot")
install.packages(sjPlot)
install.packages("sjPlot")
library(sjPlot)
sjplot(df_long)
# Genere la data df_long
df_long=long_df(df)
setwd("D:/R/BioInformatica/GBI6_ExamenFinal")
df <- read.csv("data/mRNA_expr.csv")
head(df,2)
library(tidyverse)
# Escriba aquí la función long_df
long_df = function(df){
df%>%
pivot_longer(!c(bcr_patient_barcode,dataset),names_to = "gen",values_to = "expresion_level")%>%
select(dataset,gen,expresion_level)
}
# Genere la data df_long
df_long=long_df(df)
sjplot(df_long)
sjtab(df_long)
tab_stackfrq(df_long)
tab_xtab(df_long)
tab_corr(df_long)
library(ggplot2)
library(sjmisc)
descr(df_long,file = "results/mRNA_expr_summary.doc")
df_long%>%df_long%>%group_by(dataset,gen)
df_long=df_long%>%group_by(dataset,gen)
descr(df_long,file = "results/mRNA_expr_summary.doc")
?descr
descr(df_long,file = "results/mRNA_expr_summary")
desc_table=descr(df_long)
View(desc_table)
library("ggboxplot")
df_long%>%ggplot(aes(x=factor(gen),y=expresion_level,color=factor(gen)))+
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)
summary(df_long$expresion_level)
library(ggplot2)
tcga_boxplots=function(){
df_long%>%ggplot(aes(x=factor(gen),y=expresion_level,color=factor(gen)))+
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)
}
df_long%>%ggplot(aes(x=factor(gen),y=expresion_level,color=factor(dataset)))+
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)
df_long%>%ggplot(aes(x=factor(dataset),y=expresion_level,color=factor(dataset)))+
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)
setwd("~/R/GBI6_ExamenFinal")
install.packages("sjPlot")
head(df_long,5)
# Genere la data df_long
df_long=long_df(df)
